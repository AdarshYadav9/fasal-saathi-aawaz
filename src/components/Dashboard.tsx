import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { MessageCircle, Lightbulb, Bug, TrendingUp, Sun, CloudRain, Thermometer } from 'lucide-react';

interface DashboardProps {
  language: string;
  onNavigate: (view: string) => void;
}

export const Dashboard = ({ language, onNavigate }: DashboardProps) => {
  const translations = {
    en: {
      welcome: 'Welcome to Smart Crop Advisory',
      subtitle: 'Your AI-powered farming companion for better crop decisions',
      quickActions: 'Quick Actions',
      todaysWeather: "Today's Weather",
      recentUpdates: 'Recent Updates',
      getStarted: 'Get Started',
      askAI: 'Ask AI Assistant',
      getCropAdvice: 'Get Crop Advice',
      detectPests: 'Detect Pests',
      checkPrices: 'Check Market Prices',
      weatherLocation: 'New Delhi, India',
      temperature: '28┬░C',
      condition: 'Partly Cloudy',
      humidity: 'Humidity: 65%',
      rainfall: 'Rainfall: 2mm',
      updates: [
        'Market prices updated for wheat and rice',
        'New pest alert: Watch for aphids in mustard crops',
        'Weather forecast: Good week for sowing season'
      ]
    },
    hi: {
      welcome: 'рд╕реНрдорд╛рд░реНрдЯ рдлрд╕рд▓ рд╕рд▓рд╛рд╣рдХрд╛рд░ рдореЗрдВ рд╕реНрд╡рд╛рдЧрдд рд╣реИ',
      subtitle: 'рдмреЗрд╣рддрд░ рдлрд╕рд▓ рдирд┐рд░реНрдгрдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдХреГрд╖рд┐ рд╕рд╛рдереА',
      quickActions: 'рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрдп',
      todaysWeather: 'рдЖрдЬ рдХрд╛ рдореМрд╕рдо',
      recentUpdates: 'рд╣рд╛рд▓ рдХреА рдЕрдкрдбреЗрдЯ',
      getStarted: 'рд╢реБрд░реВ рдХрд░реЗрдВ',
      askAI: 'AI рд╕рд╣рд╛рдпрдХ рд╕реЗ рдкреВрдЫреЗрдВ',
      getCropAdvice: 'рдлрд╕рд▓ рд╕рд▓рд╛рд╣ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
      detectPests: 'рдХреАрдЯ рдкрд╣рдЪрд╛рдиреЗрдВ',
      checkPrices: 'рдмрд╛рдЬрд╛рд░ рднрд╛рд╡ рджреЗрдЦреЗрдВ',
      weatherLocation: 'рдирдИ рджрд┐рд▓реНрд▓реА, рднрд╛рд░рдд',
      temperature: '28┬░C',
      condition: 'рдЖрдВрд╢рд┐рдХ рдмрд╛рджрд▓',
      humidity: 'рдирдореА: 65%',
      rainfall: 'рдмрд╛рд░рд┐рд╢: 2mm',
      updates: [
        'рдЧреЗрд╣реВрдВ рдФрд░ рдЪрд╛рд╡рд▓ рдХреЗ рдмрд╛рдЬрд╛рд░ рднрд╛рд╡ рдЕрдкрдбреЗрдЯ рд╣реБрдП',
        'рдирдИ рдХреАрдЯ рдЪреЗрддрд╛рд╡рдиреА: рд╕рд░рд╕реЛрдВ рдХреА рдлрд╕рд▓ рдореЗрдВ рдПрдлрд┐рдбреНрд╕ рдкрд░ рдирдЬрд░ рд░рдЦреЗрдВ',
        'рдореМрд╕рдо рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди: рдмреБрд╡рд╛рдИ рдХреЗ рдореМрд╕рдо рдХреЗ рд▓рд┐рдП рдЕрдЪреНрдЫрд╛ рд╕рдкреНрддрд╛рд╣'
      ]
    },
    pa: {
      welcome: 'ри╕риори╛ри░риЯ рилри╕ри▓ ри╕ри▓ри╛ри╣риХри╛ри░ ри╡ри┐рй▒риЪ риЬрйА риЖриЗриЖриВ риирйВрй░',
      subtitle: 'римри┐ри╣ридри░ рилри╕ри▓ рилрйИри╕ри▓ри┐риЖриВ ри▓риИ ридрйБри╣ри╛рибри╛ AI-ри╕рй░риЪри╛ри▓ри┐рид риЦрйЗридрйА ри╕ри╛риерйА',
      quickActions: 'ридрйБри░рй░рид риХри╛ри░ри╡ри╛риИриЖриВ',
      todaysWeather: 'риЕрй▒риЬ рижри╛ риорйМри╕рио',
      recentUpdates: 'ри╣ри╛ри▓ рижрйАриЖриВ риЕрикрибрйЗриЯри╛риВ',
      getStarted: 'ри╕ри╝рйБри░рйВ риХри░рйЛ',
      askAI: 'AI ри╕ри╣ри╛риЗриХ ридрйЛриВ рикрйБрй▒риЫрйЛ',
      getCropAdvice: 'рилри╕ри▓ ри╕ри▓ри╛ри╣ рикрйНри░ри╛рикрид риХри░рйЛ',
      detectPests: 'риХрйАрйЬрйЗ рикриЫри╛ригрйЛ',
      checkPrices: 'римри╛риЬри╝ри╛ри░ ринри╛риЕ рижрйЗриЦрйЛ',
      weatherLocation: 'риири╡рйАриВ рижри┐рй▒ри▓рйА, ринри╛ри░рид',
      temperature: '28┬░C',
      condition: 'риЕрй░ри╕ри╝ри┐риХ римрижри▓рйА',
      humidity: 'риириорйА: 65%',
      rainfall: 'римри╛ри░ри┐ри╕ри╝: 2mm',
      updates: [
        'риХригриХ риЕридрйЗ риЪри╛ри╡ри▓ рижрйЗ римри╛риЬри╝ри╛ри░ ринри╛риЕ риЕрикрибрйЗриЯ ри╣рйЛриП',
        'риири╡рйАриВ риХрйАрйЬрйЗ риЪрйЗридри╛ри╡риирйА: ри╕ри░рйЛриВ рижрйА рилри╕ри▓ ри╡ри┐рй▒риЪ риори╛ри╣рйВ рижри╛ ризри┐риЖрии ри░рй▒риЦрйЛ',
        'риорйМри╕рио рикрйВри░ри╡ри╛риирйБриори╛рии: римрйАриЬри╛риИ рижрйЗ риорйМри╕рио ри▓риИ риЪрй░риЧри╛ ри╣рилри╝ридри╛'
      ]
    }
  };

  const t = translations[language as keyof typeof translations] || translations.en;

  const quickActionItems = [
    { id: 'chatbot', label: t.askAI, icon: MessageCircle, variant: 'voice' as const },
    { id: 'recommendations', label: t.getCropAdvice, icon: Lightbulb, variant: 'field' as const },
    { id: 'pest-detection', label: t.detectPests, icon: Bug, variant: 'warning' as const },
    { id: 'market-prices', label: t.checkPrices, icon: TrendingUp, variant: 'success' as const },
  ];

  return (
    <div className="max-w-6xl mx-auto p-4 space-y-6">
      {/* Hero Section */}
      <div className="text-center bg-gradient-sky rounded-2xl p-8 shadow-medium">
        <h1 className="text-4xl font-bold text-primary mb-4">
          {t.welcome}
        </h1>
        <p className="text-lg text-muted-foreground mb-6">
          {t.subtitle}
        </p>
        <div className="text-6xl mb-4">ЁЯМ╛</div>
      </div>

      {/* Quick Actions */}
      <Card className="p-6 shadow-medium">
        <h2 className="text-2xl font-bold text-primary mb-4">{t.quickActions}</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {quickActionItems.map((item) => (
            <Button
              key={item.id}
              variant={item.variant}
              size="xl"
              className="h-20 flex flex-col gap-2"
              onClick={() => onNavigate(item.id)}
            >
              <item.icon className="w-6 h-6" />
              <span className="text-sm font-medium">{item.label}</span>
            </Button>
          ))}
        </div>
      </Card>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Weather Card */}
        <Card className="p-6 shadow-medium">
          <h3 className="text-xl font-bold text-primary mb-4 flex items-center gap-2">
            <Sun className="w-5 h-5" />
            {t.todaysWeather}
          </h3>
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="text-muted-foreground">{t.weatherLocation}</span>
              <Badge variant="outline">{t.temperature}</Badge>
            </div>
            <div className="text-2xl font-bold text-center py-4">
              тЫЕ {t.condition}
            </div>
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div className="flex items-center gap-2">
                <Thermometer className="w-4 h-4 text-muted-foreground" />
                {t.humidity}
              </div>
              <div className="flex items-center gap-2">
                <CloudRain className="w-4 h-4 text-muted-foreground" />
                {t.rainfall}
              </div>
            </div>
          </div>
        </Card>

        {/* Recent Updates */}
        <Card className="p-6 shadow-medium">
          <h3 className="text-xl font-bold text-primary mb-4">
            {t.recentUpdates}
          </h3>
          <div className="space-y-3">
            {t.updates.map((update, index) => (
              <div key={index} className="flex items-start gap-3 p-3 bg-muted/30 rounded-lg">
                <div className="w-2 h-2 bg-accent rounded-full mt-2 flex-shrink-0"></div>
                <p className="text-sm text-muted-foreground">{update}</p>
              </div>
            ))}
          </div>
        </Card>
      </div>

      {/* Get Started Section */}
      <Card className="p-6 text-center bg-gradient-earth shadow-medium">
        <h3 className="text-2xl font-bold text-primary mb-2">{t.getStarted}</h3>
        <p className="text-muted-foreground mb-4">
          {language === 'hi' 
            ? 'рд╕реНрдорд╛рд░реНрдЯ рдЦреБрд▓рд╛ рдХреЗ рд╕рд╛рде рдЕрдкрдиреА рдХреГрд╖рд┐ рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВ'
            : language === 'pa'
            ? 'ри╕риори╛ри░риЯ ри╕ри▓ри╛ри╣ риири╛ри▓ риЖрикригрйА риЦрйЗридрйА рижрйА рипри╛ридри░ри╛ ри╕ри╝рйБри░рйВ риХри░рйЛ'
            : 'Start your smart farming journey with personalized advice'
          }
        </p>
        <Button
          variant="hero"
          size="lg"
          onClick={() => onNavigate('chatbot')}
        >
          {t.askAI} ЁЯдЦ
        </Button>
      </Card>
    </div>
  );
};